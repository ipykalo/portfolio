"use strict";
(self["webpackChunkportfolio"] = self["webpackChunkportfolio"] || []).push([[179],{

/***/ 85:
/***/ (() => {


;// CONCATENATED MODULE: ./src/scripts/constnts.ts
var descriptions = [
    "\uD83D\uDC4B Hello there! I'm a seasoned Software Engineer with over 5 years of\n      hands-on experience in crafting web applications.",
    ,
    "\uD83D\uDCBB My expertise lies in web development, where I thrive in the HTML,\n      CSS, and JavaScript trio. I'm passionate about creating seamless and\n      visually appealing user experiences that leave a lasting impression.",
    ,
    "\uD83C\uDD70\uFE0F On the front-end, I'm well-versed in the Angular framework,\n      employing it to build robust and dynamic user interfaces. I have an\n      eye for design and a commitment to delivering responsive and intuitive\n      applications.",
    ,
    "\uD83D\uDE80 Beyond the client-side, I've extended my skills to the server\n    realm. I have a solid foundation in server-side development using\n    technologies like Node.js and NestJS. Databases like MongoDB are my\n    playground, where I ensure data integrity and efficiency.",
    ,
    "\uD83C\uDF10 Whether it's shaping the client's journey with a sleek UI or\n    orchestrating server-side functionalities, I bring a holistic approach\n    to web development. My goal is to create software that not only meets\n    technical requirements but also exceeds user expectations.",
    ,
    "\uD83D\uDCF1 In addition to web applications, I bring valuable experience in\n    building mobile applications. I've successfully developed Apps for\n    mobile and tablet (Android, IOS, Windows) devices.",
    ,
    "\uD83C\uDF31 Always eager to explore new technologies and methodologies, I stay\n    up-to-date with the latest trends in the ever-evolving tech landscape.\n    Let's build something extraordinary together! \uD83D\uDE80",
    ,
];
var constnts_name = "My name is Ivan Pykalo";
var displaySpeedDescription = 20; //MS
var displaySpeedName = 100; //MS
var MATRIX_RAIN_LETTERS = "ABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZ";
var MATRIX_RAIN_DROPS_SPEED = 35; //MS
var MATRIX_RAIN_TIME = 30000; //MS

;// CONCATENATED MODULE: ./src/scripts/matrix-rain.ts

var canvas = document.querySelector("canvas");
// Setting the width and height of the canvas
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;
var ctx = canvas.getContext("2d");
var letters = MATRIX_RAIN_LETTERS.split("");
// Setting up the columns
var fontSize = 10;
var columns = canvas.width / fontSize;
function runMatrixRain() {
    // Setting the width and height of the canvas
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
    // Setting up the drops
    var drops = [];
    for (var i = 0; i < columns; i++) {
        drops[i] = 1;
    }
    var startTime = new Date().getTime();
    // Loop the animation
    var interval = setInterval(function () {
        if (new Date().getTime() - startTime > MATRIX_RAIN_TIME) {
            clearInterval(interval);
            var stopTimeAnimation_1 = new Date().getTime();
            var stopAnimationInterval_1 = setInterval(function () {
                if (new Date().getTime() - stopTimeAnimation_1 > MATRIX_RAIN_TIME) {
                    clearInterval(stopAnimationInterval_1);
                    return;
                }
                draw(ctx, canvas, drops, fontSize, letters, "#000");
            }, MATRIX_RAIN_DROPS_SPEED);
            return;
        }
        draw(ctx, canvas, drops, fontSize, letters, "#0f0");
    }, MATRIX_RAIN_DROPS_SPEED);
}
function draw(ctx, canvas, drops, fontSize, letters, textColor) {
    ctx.fillStyle = "rgba(0, 0, 0, .1)";
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    for (var i = 0; i < drops.length; i++) {
        var MAGIC_NUMBER = 0.95;
        var text = letters[Math.floor(Math.random() * letters.length)];
        ctx.fillStyle = textColor;
        ctx.fillText(text, i * fontSize, drops[i] * fontSize);
        drops[i]++;
        if (drops[i] * fontSize > canvas.height && Math.random() > MAGIC_NUMBER) {
            drops[i] = 0;
        }
    }
}

;// CONCATENATED MODULE: ./src/index.ts



addEventListener("load", function () {
    showDescription();
    setTimeout(function () { return switchProfileImage(); }, getDelay(descriptions));
    setTimeout(function () { return showName(); }, getDelay(descriptions));
    setTimeout(function () { return showMainContent(); }, getDelay(descriptions));
    setTimeout(function () { return showFooterContent(); }, getDelay(descriptions));
    setTimeout(function () { return runMatrixRain(); }, getDelay(descriptions));
});
function showDescription() {
    var element = document.getElementById("description");
    for (var i = 0; i < descriptions.length; i++) {
        var text = descriptions[i];
        var index = 0;
        var p = document.createElement("p");
        element.appendChild(p);
        print(index, displaySpeedDescription, text, p);
        i++;
    }
}
function showName() {
    var element = document.getElementById("name");
    var index = 0;
    print(index, displaySpeedName, constnts_name, element);
}
function print(index, speed, text, element) {
    if (index < text.length) {
        element.innerHTML += text.charAt(index);
        index++;
        setTimeout(function () { return print(index, speed, text, element); }, speed);
    }
}
function showMainContent() {
    var mainBlock = document.getElementById("main");
    mainBlock.classList.add("visible");
    mainBlock.classList.remove("invisible");
}
function showFooterContent() {
    var footer = document.getElementById("footer");
    footer.classList.add("visible");
    footer.classList.remove("invisible");
}
function switchProfileImage() {
    var images = document.querySelectorAll(".profile_img");
    images.forEach(function (img) {
        var isVisible = img.classList.contains("visible");
        if (isVisible) {
            img.classList.remove("visible");
            img.classList.add("invisible");
        }
        else {
            img.classList.remove("invisible");
            img.classList.add("visible");
        }
    });
}
function getDelay(descriptions) {
    var maxDescription = descriptions.reduce(function (a, b) {
        return a.length > b.length ? a : b;
    });
    return maxDescription.length * (displaySpeedDescription + 2);
}


/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__(85));
/******/ }
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,